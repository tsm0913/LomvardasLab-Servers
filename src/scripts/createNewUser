#!/bin/bash

# Function to display usage information
usage() {
    echo "This function creates a new user account, imposing 2.5TB file limits and keeping the user home directory outside of the root directory."
    echo "Usage: $0"
    echo "-u <userName>  User name for the new user. REQUIRED."
    echo "-d <dataDir>   Media drive onto which to put their home directory. REQUIRED."
    echo "-l <limit>     Storage limit in TB (default: 2.5)"
    exit 1
}

# Default storage limit
default_storageLimit=2.5

# Parse input flags
while getopts "u:d:l:" opt; do
    case $opt in
        u) userName=$OPTARG ;;
        d) dataDir=$OPTARG ;;
        l) storageLimit=$OPTARG ;;
        *) usage ;;
    esac
done

# Use default if storageLimit not provided
storageLimit="${storageLimit:-$default_storageLimit}"

# Ensure all required parameters are provided
if [[ -z "$userName" || -z "$dataDir" ]]; then
    usage
fi

# Debugging: Print variable values to verify they are set
printf "\033[1;34m\nParameters:\033[0m\n" >&2
echo "userName: $userName" >&2
echo "dataDir: $dataDir" >&2
echo "storageLimit: $storageLimit" >&2

# Create the user first
echo "Creating new user: $userName"
sudo adduser $userName

# Backup and setup directories
sudo mv "/home/${userName}" "/home/${userName}.bak"
sudo mkdir "/home/${userName}"
sudo mkdir -p "/media/${dataDir}/${userName}/home"
sudo chown ${userName}:${userName} "/home/${userName}"
sudo chown ${userName}:${userName} "/media/${dataDir}/${userName}/home"
sudo chmod 755 "/media/${dataDir}/${userName}/home"

# Mount the directory
sudo mount --bind "/media/${dataDir}/${userName}/home" "/home/${userName}"
echo "/media/${dataDir}/${userName}/home /home/${userName} none bind 0 0" | sudo tee -a /etc/fstab

# Copy files from backup
if [ -d "/home/${userName}.bak" ]; then
    sudo rsync -avP "/home/${userName}.bak/" "/media/${dataDir}/${userName}/home/"
    sudo rm -rf "/home/${userName}.bak"
fi

# Find the actual filesystem mount point for quota
mount_point=$(df --output=target "/media/${dataDir}" | tail -1 | xargs)
echo "Setting quota on mount point: $mount_point"

# Check if quotas are enabled on the filesystem
if ! grep -q "usrquota" /etc/fstab | grep "$mount_point"; then
    echo "WARNING: User quotas may not be enabled on $mount_point"
    echo "You may need to add 'usrquota' to the mount options in /etc/fstab and remount"
fi

# Enable samba access for new user
sudo smbpasswd -a ${userName}
sudo smbpasswd -e ${userName}

# Add software repository
echo 'export PATH="/software/bin:$PATH"' >> ~/.bashrc
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
    echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
    echo 'eval "$(pyenv init -)"' >> ~/.bashrc
